[workspace]
members = ["cli", "lib", "xtask", "tests-integration"]
resolver = "2"

[profile.dev]
opt-level = 1 # No optimizations are too slow for us.

[profile.release]
lto = "thin"
# We use FFI so this is safest
panic = "abort"
# We assume we're being delivered via e.g. RPM which supports split debuginfo
debug = true

[profile.releaselto]
codegen-units = 1
inherits = "release"
lto = "yes"

[workspace.dependencies]
anyhow = "1.0.82"
camino = "1.1.6"
cap-std-ext = "4.0.3"
chrono = { version = "0.4.38", default-features = false }
clap = "4.5.4"
indoc = "2.0.5"
fn-error-context = "0.2.1"
libc = "0.2.154"
rustix = { "version" = "0.38.34", features = ["thread", "fs", "system", "process", "mount"] }
serde = "1.0.199"
serde_json = "1.0.116"
similar-asserts = "1.5.0"
static_assertions = "1.1.0"
tempfile = "3.10.1"
tracing = "0.1.40"
tokio = ">= 1.37.0"

# See https://github.com/coreos/cargo-vendor-filterer
[workspace.metadata.vendor-filter]
# For now we only care about tier 1+2 Linux.  (In practice, it's unlikely there is a tier3-only Linux dependency)
platforms = ["*-unknown-linux-gnu"]
tier = "2"
all-features = true
exclude-crate-paths = [ { name = "libz-sys", exclude = "src/zlib" },
                        { name = "libz-sys", exclude = "src/zlib-ng" },
                        # rustix includes pre-generated assembly for linux_raw, which we don't use
                        { name = "rustix", exclude = "src/imp/linux_raw" },
                        # Test files that include binaries
                        { name = "system-deps", exclude = "src/tests" },
                        # This stuff is giant, trim unused versions
                        { name = "k8s-openapi", exclude = "src/v1_25" },
                        { name = "k8s-openapi", exclude = "src/v1_27" },
                      ]

[workspace.lints.rust]
# Require an extra opt-in for unsafe
unsafe_code = "deny"
# Absolutely must handle errors
unused_must_use = "forbid"
missing_docs = "deny"
missing_debug_implementations = "deny"
# Feel free to comment this one out locally during development of a patch.
dead_code = "deny"

[workspace.lints.clippy]
# These should only be in local code
dbg_macro = "deny"
todo = "deny"
# These two are in my experience the lints which are most likely
# to trigger, and among the least valuable to fix.
needless_borrow = "allow"
needless_borrows_for_generic_args = "allow"
